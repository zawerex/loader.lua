local g = getgenv()
if g._launched then
    return
end
g._launched = true

local script_key = _G.script_key or ""

_G.Executor = identifyexecutor and identifyexecutor() or "unknown"

_G.AllowedExecutors = {
    ["Swift"] = true,
    ["Bunni"] = true,
    ["Potassium"] = true,
    ["Wave"] = true,
    ["Nucleus"] = true,
    ["Volcano"] = true,
    ["Seliware"] = true,
    ["Zenith"] = true,
    ["Sirhurt"] = true,
    ["RonixExploit"] = true,
    ["Delta"] = true,
    ["Codex"] = true,
    ["Krnl"] = true,
    ["Arceus X"] = true,
    ["VegaX"] = true,
    ["Hydrogen"] = true,
    ["Macsploit"] = true,
    ["Opiumware"] = true,
}

_G.SemiAllowedExecutors = {
    ["Xeno"] = true,
    ["Velocity"] = true,
    ["Solara"] = true,
}

_G.PrivateKeys = {
    ["HtmjenstHCFxDLgzVKBNaxiAxyUMTRpq"] = true,
    ["nsqbvRMogxhZwIDcxfdjlTgQTpEFwHiQ"] = true,
    ["SCSrQythCDLZVZfxYtPxBJxJSiKDfuoK"] = true,
    ["AcjkzkPTdWtUugMrbeUSLVLspJPKophm"] = true,
    ["aIolnVjgLexwfODDAdZbhTicaUCDuhfD"] = true,
    ["xCeeJWIGnEkvbEFYPXpkTKCAzkFrdkxk"] = true,
    ["YaGBDUImpYaHwdXtiCXJjxrnxMBuYgeu"] = true,
    ["OBeoposJzetpwsgjEIuufgFdiXRZiQJL"] = true,
    ["TestKeyNexus1234567890ABCDEFGHIJK"] = true, -- Тестовый ключ
}

-- Проверка ключа
if not script_key or script_key == "" or script_key == "PUT YOUR KEY HERE" then
    warn("Please set your key: script_key = 'YOUR_KEY'")
    return
end

if not _G.PrivateKeys[script_key] then
    warn("Invalid key. Please check your key.")
    return
end

print("Key verified successfully! Welcome to Nexus Script")

local now = os.time()

if not LRM_SecondsLeft or type(LRM_SecondsLeft) ~= "number" or LRM_SecondsLeft <= 0 or LRM_SecondsLeft == math.huge then
    _G.SubscriptionExpire = nil
    _G.LicenseExpiryText = "lifetime"
else
    local expireTime = now + LRM_SecondsLeft
    local expireDate = os.date("*t", expireTime)

    if expireDate then
        _G.SubscriptionExpire = {
            day = expireDate.day,
            month = expireDate.month,
            year = expireDate.year,
            hour = expireDate.hour,
            min = expireDate.min
        }

        _G.LicenseExpiryText = string.format(
            "%02d/%02d/%04d %02d:%02d",
            expireDate.day,
            expireDate.month,
            expireDate.year,
            expireDate.hour,
            expireDate.min
        )
    else
        _G.SubscriptionExpire = nil
        _G.LicenseExpiryText = "N/A"
    end
end

if not _G.AllowedExecutors[_G.Executor] and not _G.SemiAllowedExecutors[_G.Executor] then
    warn("Executor not allowed: " .. _G.Executor)
    return
end

-- Game configurations
local Games = {
    [6676099788] = "https://raw.githubusercontent.com/zawerex/Conexion1fsafsdfds/refs/heads/main/3432423235234", -- MarvelOmega
    
}

local gameId = game.GameId
local URL = Games[gameId]

if URL then
    -- Безопасная загрузка с обработкой ошибок
    local success, err = pcall(function()
        local scriptContent = game:HttpGet(URL)
        if scriptContent then
            local loadedScript = loadstring(scriptContent)
            if loadedScript then
                loadedScript()
            else
                error("Failed to load script content")
            end
        else
            error("Failed to fetch script from URL")
        end
    end)
    
    if not success then
        warn("Error loading script: " .. tostring(err))
    end
else
    warn("No scripts configured for this game. Game ID: " .. gameId)
end
